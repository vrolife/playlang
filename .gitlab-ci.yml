variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - generate_javascript
  - test_javascript
  - test_python
  - upload

generate_javascript:
  stage: generate_javascript
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.7
  artifacts:
    paths:
      - .js
  script:
    - EXPORT_DIR='.js' python -m unittest test_js.py

test_javascript:
  stage: test_javascript
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:14
  script:
    - for CLS in `ls .js`; do (cd .js/$CLS; node tests.mjs); done

test_python:
  stage: test_python
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.7
  script:
    - python -V
    - python -m unittest test_py.py

upload:
  stage: upload
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.7
  script:
    - python setup.py bdist_wheel --build-number ${CI_PIPELINE_IID}
    - pip install twine
    - export TWINE_PASSWORD=${CI_JOB_TOKEN}
    - export TWINE_USERNAME=gitlab-ci-token
    - python -m twine upload --repository-url ${PYPI_REPOSITORY} dist/*
  only:
    - /^release-.*/
